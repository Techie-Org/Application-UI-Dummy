/**
 * DEVELOPMENT WEBPACK CONFIGURATION
 */

const path = require('path');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
  mode: 'development',
  entry: [
    // Add hot reloading in development
    'webpack-hot-middleware/client?reload=true',
    path.join(process.cwd(), 'app/index.js'), // Start with app/index.js file & process can also be changed as __dirname
  ],
  // Don't use the hashed in dev mode for better performance
  output: {
    path: path.resolve(process.cwd(), 'dist'), //  TODO: Need to modify the path
    filename: '[name].js',
    chunkFilename: '[name].chunk.js',
    publicPath: '/',
  },
  module: {
    rules: [
      {
        test: /\.js$/, // Transform all .js files required somewhere with Babel
        exclude: /node_modules/,
        loader: 'babel-loader',
      },
      {
        test: /\.css$/,
        exclude: /node_modules/,
        use: ['style-loader', 'css-loader'],
      },
      {
        test: /\.scss$/,
        exclude: /node_modules/,
        use: [
          {
            loader: 'style-loader',
          },
          {
            loader: 'css-loader',
            options: {
              modules: {
                mode: 'local',
                namedExport: false,
                localIdentName: '[path][name]__[local]--[hash:base64:5]',
                exportLocalsConvention: 'camelCase',
              },
            },
          },
          {
            loader: 'sass-loader',
            options: {
              sassOptions: {
                quietDeps: true,
                includePaths: ['src/styles'],
              },
            },
          },
        ],
      },
      {
        test: /\.(jpe?g|png|svg|gif|webp)$/i,
        type: 'asset/resource',
        generator: {
          filename: '[hash].[name][ext]',
        },
      },
      {
        test: /\.html$/,
        loader: 'html-loader',
      },
      {
        test: /manifest\.json$/, // Webpack v4 handles json automatically, but file-loader is needed for the manifest.json
        type: 'javascript/auto',
        use: ['file-loader'],
      },
      {
        test: /\.(mp4|webm)$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
        },
      },
    ],
  },
  resolve: {
    modules: ['app', 'node_modules'],
    symlinks: false, // needed for npm link
    extensions: ['.js', '.jsx', '.react.js'],
    alias: {
      '@internals': path.resolve(__dirname, './internals'),
      moment$: 'moment/moment.js',
      config: path.join(
        process.cwd(),
        `app/config/${process.env.APP_CONFIG || 'development'}.js`
      ),
    },
  },
  plugins: [
    new webpack.HotModuleReplacementPlugin(), // Tell webpack we want hot reloading
    new HtmlWebpackPlugin({
      inject: true, // Inject all files that are generated by webpack e.g bundle.js
      template: './app/index.html',
    }),
  ],
  // Emit a source map for easier debugging
  devtool: 'eval-cheap-module-source-map',
  target: 'web', // Make web variables accessible to webpack, e.g. window
};
